{% liquid
  assign heading_font = section.settings.heading_font
  assign heading_color = section.settings.heading_color
  assign heading_alignment = section.settings.heading_alignment
  assign heading_size = section.settings.heading_size
  assign text_font = section.settings.text_font
  assign text_color = section.settings.text_color
  assign text_alignment = section.settings.text_alignment
  assign text_size = section.settings.text_size

  # Is the color set to transparent?
  assign heading_alpha = heading_color | color_extract: 'alpha'
  assign text_alpha = text_color | color_extract: 'alpha'
  assign background_alpha = section.settings.background | color_extract: 'alpha'
%}

{% comment %} Section specific CSS {% endcomment %}
{%- capture section_css -%}
  .section {
    background-image: linear-gradient({{ section.settings.gradient_rotation }}deg, rgba(255,255,255,0), {{ section.settings.gradient }});
    background-color: {%- if background_alpha != 0 -%}{{ section.settings.background }}{%- endif -%};
  }

  .rich-text__heading {
    font-size: {{ heading_size }}px;
    color: {%- if heading_alpha != 0 -%}{{ heading_color }}{%- else -%}{{ settings.heading_color }}{%- endif -%};
    font-family: {{ heading_font.family }}, {{ heading_font.fallback_families }};
    font-weight: {{ heading_font.weight }};
    font-style: {{ heading_font.style }};
  }

  .rich-text__text {
    font-size: {{ text_size }}px;
    color: {%- if text_alpha != 0 -%}{{ text_color }}{%- else -%}{{ settings.regular_color }}{%- endif -%};
    font-family: {{ text_font.family }}, {{ text_font.fallback_families }};
    font-weight: {{ text_font.weight }};
    font-style: {{ text_font.style }};
  }
{%- endcapture -%}

{% style %}
  {{ heading_font | font_face }}
  {{ text_font | font_face }}

  #shopify-section-{{ section.id }} {
    padding-top: {{ section.settings.padding_top }}px;
    padding-right: {{ section.settings.padding_right }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
    padding-left: {{ section.settings.padding_left }}px;

    {% if section.settings.width == 'wide' %}
      width: 100%;
    {% elsif section.settings.width == 'half' %}
      width: 50%;
    {% endif %}
  }

  @media only screen and (max-width: 798px) {
    #shopify-section-{{ section.id }} {
      padding-top: {{ section.settings.padding_top_mobile }}px;
      padding-bottom: {{ section.settings.padding_bottom_mobile }}px;
    }
  }

  {%
    render 'css-loop',
    css: section_css,
    id: section.id,
  %}

  {%
    render 'css-loop',
    css: section.settings.custom_css,
    id: section.id,
  %}
  .at-item {
    border-radius: 5px;
    margin-bottom: 15px;
  }
  .at-title {
    cursor: pointer;
    background-color: #f5f5f5;
    position: relative;
    transition: background-color 0.3s ease;
  }

  .at-tab {
    display: none;
    padding: 15px;
    border: 1px solid #dddddd;
    border-top: none;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    background-color: #fff;
  }

  .at-title:hover {
    background-color: #e0e0e0;
  }

  .at-title:after {
    content: "+";
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    right: 10px;
    transition: all 0.3s ease;
    font-size: 24px;
  }

  .at-title.active:after {
    content: "-";
  }

  .at-title h2 {
    font-size: 22px;
    font-weight: 600;
    padding: 10px 15px;
    margin: 0;
  }
{% endstyle %}

<section class="section is-width-wide bottom-content-2">
  <div class="container has-limit">
    <div class="columns one-whole card-content ">
      <div class="rich-text__content read-more js-read-more test551" data-rm-words="115">
        {% if collection.title != blank %}
          <h2 class="rich-text__heading title text-align-center">
            {{ collection.title }}
          </h2>
        {% endif %}
        <div class="rich-text__text content text-align-left">
            {{ collection.description | replace: '<img', '<img loading="lazy"' | replace: '<iframe', '<iframe loading="lazy"' | replace: '<video', '<video preload="none"' }}
            {% comment %}
            {%- if page_description -%}
              {{ collection.description }}
            {%- else -%}
              {{ collection.metafields.custom.collection_desc | metafield_tag }}
            {%- endif -%}
            {% endcomment %}
        </div>
      </div>
    </div>
  </div>
  <script>
    document.addEventListener("DOMContentLoaded", (event) => {

      ReadMore2.init(document.querySelectorAll('.bottom-content-2 .read-more'));

      $(document).on("click",".at-title",function () {
        $(this)
          .toggleClass("active")
          .next(".at-tab")
          .slideToggle()
          .parent()
          .siblings()
          .find(".at-tab")
          .slideUp()
          .prev()
          .removeClass("active");
      });
    });
  </script>
</section>

{% schema %}
{
  "name": "Bottom Content",
  "settings": [
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Font",
      "default": "open_sans_n4"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "justify",
          "label": "Justify"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "heading_size",
      "label": "Heading base size",
      "min": 20,
      "max": 120,
      "default": 30,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background",
      "default": "#EEEEEE"
    },
    {
      "type": "range",
      "id": "gradient_rotation",
      "label": "Gradient rotation",
      "min": 0,
      "max": 180,
      "step": 10,
      "default": 180,
      "unit": "deg"
    },
    {
      "type": "header",
      "content": "Text"
    },
    {
      "type": "font_picker",
      "id": "text_font",
      "label": "Font",
      "default": "open_sans_n4"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "justify",
          "label": "Justify"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "text_size",
      "label": "Text base size",
      "min": 8,
      "max": 40,
      "default": 14,
      "unit": "px"
    }
  ],
  "presets": [
    {
      "name": "Bottom Content 2"
    }
  ]
}
{% endschema %}
